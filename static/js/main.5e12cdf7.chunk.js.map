{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxx/Auxx.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","axios-orders.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","assets/images/burger-logo.jpg","assets/images/burger.png","assets/images/chineese.png","assets/images/samosa.png","assets/images/coke.png","assets/images/dosa.png","assets/images/pastry.png","hoc/asyncComponent/asyncComponent.js","components/UI/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggel.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrederSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","Object","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","objectSpread","fetchOrdersFailed","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","err","setAuthRedirectPath","path","authCheckState","getItem","burgerBuilder_addIngredient","burgerBuilder_removeIngredient","burgerBuilder_initIngredients","order_purchaseBurger","order_purchaseInit","order_fetchOrders","auth_auth","auth_logout","auth_setAuthRedirectPath","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","create","baseURL","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","backdrop","show","a","createElement","className","onClick","clicked","Modal","nextProps","nextState","this","react__WEBPACK_IMPORTED_MODULE_5___default","_hoc_Auxx_Auxx__WEBPACK_IMPORTED_MODULE_7__","_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_8__","modalClosed","style","transform","opacity","Component","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","_this","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","Array","_key","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","state","errorConfirmedHandler","setState","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_ShubhamDhage_burger_project_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_this2","reqInterceptor","interceptors","use","req","resInterceptor","request","eject","_Auxx_Auxx__WEBPACK_IMPORTED_MODULE_7__","_components_UI_Modal_Modal__WEBPACK_IMPORTED_MODULE_6__","message","BurgerIngredient","ingredient","react_default","src","burgerImage","alt","chineeseImage","cokeImage","dosaImage","pastryImage","samosaImage","burger","transformedIngredients","keys","map","igKey","toConsumableArray","_","i","BurgerIngredients_BurgerIngredients","reduce","arr","el","module","exports","p","asyncComponent","importComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","component","inherits","createClass","cmp","default","C","logo","height","Burgerlogo","navigationItem","NavLink","to","link","exact","activeClassName","navigationItems","NavigationItem_NavigationItem","isAuthenticated","drawerToggle","toolbar","DrawerToggel","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","isAuth","sideDrawer","attachedClasses","open","Auxx","Backdrop","closed","join","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","SideDrawer_SideDrawer","connect","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","cntrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","ordered","purchasable","orderSummary","ingredientSummary","styel","textTransform","Button","variant","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","sum","disabledInfo","ings","Spinner","Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrederSummary_OrderSummary","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","Redirect","asyncCheckout","e","bind","asyncOrder","asyncAuth","App","onTryAutoSignup","routes","Switch","Route","hoc_Layout_Layout","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","chineese","coke","dosa","pastry","samosa","reducer","undefined","action","updatedIngredient","defineProperty","updatedState","updatedIng","updatedSt","setIngredient","fetchIngredientsFailed","loading","purchased","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","HashRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e12cdf7.chunk.js","sourcesContent":["\r\n// String Indentifier Redux\r\n\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.minLength){\r\n        isValid = value.length >= rules.minLength  && isValid\r\n    }\r\n\r\n    if(rules.maxLength){\r\n        isValid = value.length <= rules.maxLength  && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n\r\n}\r\n","const aux = (props) => props.children ;\r\n\r\nexport default aux;","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-2bd9e.firebaseio.com/foodmenu.json')\r\n        .then( response => {\r\n            dispatch(setIngredients(response.data));\r\n        } )\r\n        .catch( error => {\r\n           dispatch(fetchIngredientsFailed());\r\n        } );\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n               dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            } )\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId +'\"';\r\n        axios.get('/orders.json' + queryParams)\r\n        .then( res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n              fetchedOrders.push({\r\n                  ...res.data[key],\r\n                  id: key\r\n              });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n        })\r\n        .catch( error => {\r\n            dispatch(fetchOrdersFailed(error));\r\n        })\r\n    }\r\n};","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDxiXuLA5vvnRiyN80IZNb-Wf08aJqJJWY';\r\n        if(!isSignUp) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDxiXuLA5vvnRiyN80IZNb-Wf08aJqJJWY';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n          .then(response => {\r\n              const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n              localStorage.setItem('token', response.data.idToken);\r\n              localStorage.setItem('expirationDate', expirationDate);\r\n              localStorage.setItem('userId', response.data.localId);\r\n              dispatch(authSuccess(response.data.idToken, response.data.idToken));\r\n              dispatch(checkAuthTimeout(response.data.expiresIn));\r\n          })\r\n          .catch(err => {\r\n              dispatch(authFail(err.response.data.error))\r\n          })\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }\r\n        }\r\n\r\n        \r\n    };\r\n};","export { addIngredient, removeIngredient, initIngredients } from './burgerBuilder';\r\nexport { purchaseBurger, purchaseInit, fetchOrders } from './order';\r\nexport { auth, logout, setAuthRedirectPath, authCheckState } from './auth';","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-2bd9e.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Auxx/Auxx';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className='Modal' \r\n                style={{ \r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className=\"loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxx/Auxx';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n\r\n            this.reqInterceptor = axios.interceptors.response.use(req => {\r\n                                        this.setState({ error: null });\r\n                                        return req;\r\n                                    });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                                        this.setState({ error: error });\r\n                                    });\r\n        }\r\n\r\n        componentWillUnmount(){  // it will remove the interceptors to prevent the memory leak\r\n            \r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler} >\r\n                       {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport burgerImage from '../../../assets/images/burger.png';\r\nimport chineeseImage from '../../../assets/images/chineese.png';\r\nimport samosaImage from '../../../assets/images/samosa.png';\r\nimport cokeImage from '../../../assets/images/coke.png';\r\nimport dosaImage from '../../../assets/images/dosa.png';\r\nimport pastryImage from '../../../assets/images/pastry.png';\r\n\r\nimport './BurgerIngredients.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n     \r\n        let ingredient = null;\r\n\r\n    switch ( this.props.type ) {\r\n\r\n        \r\n        case ('burger'):\r\n           ingredient = <div className='food'><img src={burgerImage} alt='burger' /></div>\r\n           break;\r\n\r\n        case ('chineese'):\r\n           ingredient = <div className='food'><img src={chineeseImage} alt='chineese' /></div>\r\n           break;\r\n\r\n        case ('coke'):\r\n           ingredient = <div className='food'><img src={cokeImage} alt='coke' /></div>\r\n           break;\r\n\r\n        case ('dosa'):\r\n           ingredient = <div className='food'><img src={dosaImage} alt='dosa' /></div>\r\n           break;\r\n\r\n        case ('pastry'):\r\n           ingredient = <div className='food'><img src={pastryImage} alt='pastry' /></div>\r\n           break;\r\n\r\n        case ('samosa'):\r\n           ingredient = <div className='food'><img src={samosaImage} alt='samosa' /></div>\r\n           break;\r\n    \r\n        default:\r\n            ingredient = null;\r\n        \r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n    /* converting the object into array */\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            \r\n           /* console.log(igKey) // salad, bacon, (2)cheese, (2)meat\r\n            console.log(igKey + i) // salad, salad0,cheese, cheese0, cheese, cheese1..... */\r\n\r\n            return <div className='menu' key={igKey + i}><BurgerIngredient key={igKey + i} type={igKey} /></div>;    // internal mapping\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);  // [] staring with inital one\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please Start Adding Food Items!</p>\r\n    }\r\n    return (\r\n        <div className='Burger'>\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.143b9b73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burger.0040fe3b.png\";","module.exports = __webpack_public_path__ + \"static/media/chineese.ed6f238f.png\";","module.exports = __webpack_public_path__ + \"static/media/samosa.0f1ba220.png\";","module.exports = __webpack_public_path__ + \"static/media/coke.aba7a897.png\";","module.exports = __webpack_public_path__ + \"static/media/dosa.01e1c383.png\";","module.exports = __webpack_public_path__ + \"static/media/pastry.88304f60.png\";","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n            .then(cmp => {\r\n                this.setState({ component: cmp.default });\r\n            });\r\n        }\r\n\r\n        render(){\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React from 'react';\r\n\r\nimport Burgerlogo from '../../../assets/images/burger-logo.jpg';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className='Logo' style={{height: props.height}}>\r\n        <img src={Burgerlogo} alt='MyBurger' />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className='NavigationItem'>\r\n       <NavLink to={props.link} exact={props.exact} activeClassName={'active'} >{props.children}</NavLink>\r\n    </li>\r\n  \r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className='NavigationItems'>\r\n       <NavigationItem link='/' exact>Burger Builder</NavigationItem> \r\n       {props.isAuthenticated \r\n             ? <NavigationItem link='/orders'>Orders</NavigationItem>\r\n             : null\r\n       }\r\n       { !props.isAuthenticated \r\n             ? <NavigationItem link='/auth'>Log In/ Sign Up</NavigationItem>\r\n             : <NavigationItem link='/logout'>Log Out</NavigationItem> \r\n        }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\n\r\nconst drawerToggle = (props) => (\r\n   <div className='DrawerToggle' onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n   </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport './Toolbar.css';\r\nimport Logo from '../../UI/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggel';\r\n\r\nconst toolbar = (props) => (\r\n    <header className='Toolbar'>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height='80%' />\r\n        <nav className='DesktopOnly'>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport Logo from '../../UI/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxx/Auxx';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n        if(props.open){\r\n            attachedClasses= ['SideDrawer', 'Open'];\r\n        }\r\n\r\n\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed} />\r\n        <div className={attachedClasses.join(' ')}  onClick={props.closed} >\r\n          <div className='logo-logo'>\r\n            <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n    \r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxx/Auxx';\r\nimport './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => { \r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Aux> {/* Wrapping root elements */}\r\n        <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n        <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n        <main className='Content'>\r\n            {this.props.children}\r\n        </main>\r\n    </Aux>\r\n        )\r\n    }\r\n\r\n} \r\n\r\nconst mapToStateProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n};\r\n\r\nexport default connect(mapToStateProps)(Layout);","import React from 'react';\r\n\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className='BuildControl'> \r\n        <div className='Label'>{props.label}</div>\r\n        <button className='Less' onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className='More' onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Burger', type: 'burger'},\r\n    {label: 'Chineese', type: 'chineese'},\r\n    {label: 'Coke', type: 'coke'},\r\n    {label: 'Dosa', type: 'dosa'},\r\n    {label: 'Pastry', type: 'pastry'},\r\n    {label: 'Samosa', type: 'samosa'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className='BuildControls'>\r\n\r\n        <p>Current Price: <strong>Rs. {props.price.toFixed(2)} /-</strong></p>\r\n\r\n        {controls.map((cntrl) => (\r\n            <BuildControl key={cntrl.label} \r\n            label={cntrl.label}\r\n            added={() => props.ingredientAdded(cntrl.type)}\r\n            removed={() => props.ingredientRemoved(cntrl.type)}\r\n            disabled={props.disabled[cntrl.type]}\r\n        />\r\n        ) )}\r\n\r\n        <button className='OrderButton' \r\n                onClick={props.ordered} \r\n                disabled={!props.purchasable}\r\n          >  {props.isAuth ? 'ORDER NOW' : 'LOG IN TO ORDER' }\r\n        </button>\r\n       \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxx/Auxx';\r\nimport { Button } from 'react-bootstrap';\r\nimport './OrderSummary.css';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (<li key={igKey}>\r\n                   <span styel={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n                </li>);\r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients..</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: Rs. {props.price.toFixed(2)} /-</strong></p>\r\n            <p>Continue to checkout?</p>\r\n            <div className='Button'> \r\n                <Button variant=\"danger\" onClick={props.purchaseCancelled}>CANCEL</Button>\r\n                <Button variant=\"success\" onClick={props.purchaseContinued}>CONTINUE</Button>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxx/Auxx';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrederSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state={\r\n        purchasing: false,\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n\r\n    updatePurchaseState (ingredients){\r\n     \r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    \r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true})\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth')\r\n        }\r\n        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased(); // redirect to home after purchased\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {  // checks whether we get the ingredients from server database then do the task.\r\n            burger = ( <Aux>\r\n                            <Burger ingredients={this.props.ings} />\r\n                            <BuildControls \r\n                                ingredientAdded={this.props.onIngredientAdded}\r\n                                ingredientRemoved={this.props.onIngredientRemoved}\r\n                                disabled={disabledInfo}\r\n                                purchasable={this.updatePurchaseState(this.props.ings)}\r\n                                ordered={this.purchaseHandler}\r\n                                isAuth={this.props.isAuthenticated}\r\n                                price={this.props.price} />\r\n                        </Aux> \r\n                    );\r\n            orderSummary = <OrderSummary ingredients={this.props.ings} \r\n                            price={this.props.price}\r\n                            purchaseCancelled={this.purchaseCancelHandler}\r\n                            purchaseContinued={this.purchaseContinueHandler} />\r\n            }\r\n\r\n\r\n\r\n       return (\r\n           <Aux>\r\n               <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                   {orderSummary}\r\n               </Modal>\r\n\r\n               {burger}\r\n\r\n           </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch( actions.addIngredient(ingName) ),\r\n        onIngredientRemoved: (ingName) => dispatch( actions.removeIngredient(ingName) ),\r\n        onInitIngredients: () => dispatch( actions.initIngredients() ),\r\n        onInitPurchased: () => dispatch( actions.purchaseInit() ),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n   return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrder = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n            <Route path=\"/checkout\" component={asyncCheckout} />\n            <Route path=\"/orders\" component={asyncOrder} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/auth\" component={asyncAuth} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to=\"/\"/>\n      </Switch>\n      );\n    }\n\n    return (\n      <div >\n        <Layout>\n            {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )(App) );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n        ingredients: null,\r\n        totalPrice: 0,\r\n        error: false,\r\n        building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n        burger: 55,\r\n        chineese: 50,\r\n        coke: 22,\r\n        dosa: 45,\r\n        pastry: 20,\r\n        samosa: 10\r\n    }\r\n\r\nconst addIngredient = (state, action) => {\r\n        const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n        const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n        const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true \r\n        }\r\n        return updateObject( state, updatedState );\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n        const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n        const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n        const updatedSt = {\r\n                ingredients: updatedIngs,\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: true  \r\n        }\r\n        return updateObject( state, updatedSt );\r\n}\r\n\r\nconst setIngredient = (state, action) => {\r\n        return updateObject(state, {\r\n                ingredients: {\r\n                        burger: action.ingredients.burger,\r\n                        chineese: action.ingredients.chineese,\r\n                        coke: action.ingredients.coke,\r\n                        dosa: action.ingredients.dosa,\r\n                        pastry: action.ingredients.pastry,\r\n                        samosa: action.ingredients.samosa\r\n                },\r\n                error: false,\r\n                totalPrice: 0,\r\n                building: false\r\n              });\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n        return updateObject(state, {error: true} );\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n        switch(action.type) {\r\n                case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n                case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n                case actionTypes.SET_INGREDIENTS: return setIngredient(state, action);\r\n                case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n                default: return state; // initialState\r\n                    \r\n        }\r\n\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n\r\n           return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n    } );\r\n\r\n}; \r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n     });\r\n\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n        \r\n     });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);             \r\n        default:\r\n             return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}